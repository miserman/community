{"version":3,"file":"data_handler.js","sources":["../js/data_handler/index.ts"],"sourcesContent":["'use strict'\r\nimport {value_checks} from './checks'\r\nimport {exporter} from './exporter'\r\nimport * as retrievers from './retrievers'\r\nimport * as formatter from './formatters'\r\nimport * as ingester from './ingesters'\r\nimport * as summary from './summary'\r\nimport * as mapper from './mappers'\r\nimport * as parser from './parsers'\r\nimport type {\r\n  Settings,\r\n  Variable,\r\n  Metadata,\r\n  MeasureInfos,\r\n  DataSets,\r\n  Features,\r\n  Variables,\r\n  References,\r\n  Entities,\r\n  Relations,\r\n  MetaTime,\r\n  LogicalObject,\r\n  Promises,\r\n  DataMaps,\r\n  DataResource,\r\n  MeasureInfo,\r\n  DataPackage,\r\n  EntityFeatureSet,\r\n  Entity,\r\n} from '../types'\r\nimport {SiteDataView} from '../site/dataview'\r\n\r\nexport default class DataHandler {\r\n  constructor(\r\n    settings?: Settings,\r\n    defaults?: {[index: string]: string},\r\n    data?: DataSets,\r\n    hooks?: {[index: string]: Function}\r\n  ) {\r\n    this.defaults = defaults || {}\r\n    this.settings = settings || {}\r\n    this.metadata = this.settings.metadata || {datasets: []}\r\n    this.sets = data || {}\r\n    this.hooks = hooks || {}\r\n    this.get_value = this.get_value.bind(this)\r\n    this.dynamic_load = 'dataviews' in this.settings && this.settings.settings && !!this.settings.settings.partial_init\r\n    this.settings.view_names = this.dynamic_load ? Object.keys(this.settings.dataviews) : ['default_view']\r\n    if ('string' === typeof this.metadata.datasets) this.metadata.datasets = [this.metadata.datasets]\r\n    const init = () => {\r\n      if (!this.metadata.datasets || !this.metadata.datasets.length) {\r\n        this.metadata.datasets = Object.keys(this.info)\r\n        if (!this.metadata.datasets.length) this.metadata.datasets = Object.keys(this.sets)\r\n      }\r\n      if (this.metadata.measure_info) {\r\n        const info = parser.measure_info(this.metadata.measure_info)\r\n        this.metadata.datasets.forEach((d: string) => {\r\n          if (info._references) this.info[d]._references = info._references\r\n          const v = this.info[d].schema.fields\r\n          v.forEach(e => (e.name in info ? (e.info = info[e.name] as MeasureInfo) : ''))\r\n        })\r\n      }\r\n      this.map_variables()\r\n      if (this.metadata.datasets.length) {\r\n        this.metadata.datasets.forEach((k: string) => {\r\n          this.loaded[k] = k in this.sets\r\n          this.inited[k] = false\r\n          this.data_processed[k] = new Promise(resolve => {\r\n            this.data_promise[k] = resolve\r\n          })\r\n          if (k in this.info)\r\n            this.info[k].site_file = (this.metadata.url ? this.metadata.url + '/' : '') + this.info[k].name + '.json'\r\n          if (this.loaded[k]) {\r\n            this.ingest_data(this.sets[k], k)\r\n          } else if (\r\n            !this.dynamic_load ||\r\n            (this.settings.settings && !this.settings.settings.partial_init) ||\r\n            !this.defaults.dataset ||\r\n            k === this.defaults.dataset\r\n          ) {\r\n            this.retrieve(k, this.info[k].site_file)\r\n          }\r\n        })\r\n      } else {\r\n        setTimeout(() => {\r\n          this.inited.first = true\r\n          this.hooks.init && this.hooks.init()\r\n          this.hooks.onload && this.hooks.onload()\r\n        }, 0)\r\n      }\r\n    }\r\n    if (this.metadata.package && !this.metadata.info) {\r\n      if ('undefined' === typeof window) {\r\n        require('https')\r\n          .get(this.metadata.url + this.metadata.package, (r: {on: Function}) => {\r\n            const c: string[] = []\r\n            r.on('data', (d: string) => {\r\n              c.push(d)\r\n            })\r\n            r.on('end', () => {\r\n              this.info = {}\r\n              const dp: DataPackage = JSON.parse(c.join(''))\r\n              if (dp.measure_info) this.metadata.measure_info = dp.measure_info\r\n              dp.resources.forEach((r: DataResource) => (this.info[r.name] = r))\r\n              init()\r\n            })\r\n          })\r\n          .end()\r\n      } else {\r\n        const f = new window.XMLHttpRequest()\r\n        f.onreadystatechange = () => {\r\n          if (4 === f.readyState) {\r\n            if (200 === f.status) {\r\n              this.info = {}\r\n              const dp = JSON.parse(f.responseText)\r\n              if (dp.measure_info) this.metadata.measure_info = dp.measure_info\r\n              dp.resources.forEach((r: DataResource) => (this.info[r.name] = r))\r\n              init()\r\n            } else {\r\n              throw new Error('failed to load datapackage: ' + f.responseText)\r\n            }\r\n          }\r\n        }\r\n        f.open('GET', this.metadata.url + this.metadata.package)\r\n        f.send()\r\n      }\r\n    } else {\r\n      if (this.metadata.info) this.info = this.metadata.info\r\n      init()\r\n    }\r\n  }\r\n  hooks: {[index: string]: Function} = {}\r\n  defaults: {[index: string]: string} = {dataview: 'default_view', time: 'time'}\r\n  settings: Settings = {}\r\n  metadata: Metadata = {datasets: []}\r\n  info: {[index: string]: DataResource} = {}\r\n  sets: DataSets = {}\r\n  dynamic_load = false\r\n  all_data_ready: Function = () => false\r\n  data_ready: Promise<void> = new Promise(resolve => {\r\n    this.all_data_ready = resolve\r\n  })\r\n  features: Features = {}\r\n  variables: Variables = {}\r\n  variable_codes: Variables = {}\r\n  variable_info: MeasureInfos = {}\r\n  references: References = {}\r\n  entities: Entities = {}\r\n  entity_tree: {[index: string]: Relations} = {}\r\n  meta: MetaTime = {\r\n    times: {},\r\n    variables: {},\r\n    ranges: {},\r\n    overall: {\r\n      range: [Infinity, -Infinity],\r\n      value: [],\r\n    },\r\n  }\r\n  loaded: LogicalObject = {}\r\n  onload: () => {}\r\n  inited: {[index: string]: number | NodeJS.Timeout | boolean} = {}\r\n  inited_summary: Promises = {}\r\n  summary_ready: {[index: string]: Function} = {}\r\n  entity_features: EntityFeatureSet = {}\r\n  data_maps: DataMaps = {}\r\n  data_queue: {[index: string]: {[index: string]: Function}} = {}\r\n  data_promise: {[index: string]: Function} = {}\r\n  data_processed: Promises = {}\r\n  load_requests: {[index: string]: string} = {}\r\n  retrieve = async function (this: DataHandler, name: string, url: string) {\r\n    if (!this.load_requests[name]) {\r\n      this.load_requests[name] = url\r\n      const f = new window.XMLHttpRequest()\r\n      f.onreadystatechange = () => {\r\n        if (4 === f.readyState) {\r\n          if (200 === f.status) {\r\n            this.ingest_data(JSON.parse(f.responseText), name)\r\n          } else {\r\n            throw new Error('DataHandler.retrieve failed: ' + f.responseText)\r\n          }\r\n        }\r\n      }\r\n      f.open('GET', url, true)\r\n      f.send()\r\n    }\r\n  }\r\n  format_value = formatter.value\r\n  format_label = formatter.label\r\n  ingest_data = ingester.data\r\n  ingest_map = ingester.map\r\n  load_id_maps = ingester.id_maps\r\n  init_summary = summary.init\r\n  calculate_summary = summary.calculate\r\n  map_variables = mapper.variables\r\n  map_entities = mapper.entities\r\n  parse_query = parser.query\r\n  export = exporter\r\n  get_variable = async function (this: DataHandler, variable: string, view: SiteDataView): Promise<Variable> {\r\n    if (variable in this.variables) await this.calculate_summary(variable, view, true)\r\n    return this.variables[variable]\r\n  }\r\n  get_value = function vector(this: DataHandler, r: {variable: string; entity: Entity}): number[] {\r\n    if (this.variables[r.variable].is_time) {\r\n      return r.entity.time.value as number[]\r\n    } else {\r\n      const v = this.variables[r.variable].code\r\n      return (\r\n        v in r.entity.data ? (Array.isArray(r.entity.data[v]) ? r.entity.data[v] : [r.entity.data[v]]) : [NaN]\r\n      ) as number[]\r\n    }\r\n  }\r\n  public static retrievers = retrievers\r\n  public static checks = value_checks\r\n}\r\n"],"names":[],"mappings":";;;;;;;IACA,MAAqC,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;IACrC,MAAmC,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;IACnC,MAA0C,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;IAC1C,MAAyC,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;IACzC,MAAuC,QAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;IACvC,MAAoC,OAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;IACpC,MAAmC,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;IACnC,MAAmC,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;IAwBnC,MAAqB,WAAW,CAAA;IAC9B,IAAA,WAAA,CACE,QAAmB,EACnB,QAAoC,EACpC,IAAe,EACf,KAAmC,EAAA;YA6FrC,IAAK,CAAA,KAAA,GAAgC,EAAE;YACvC,IAAQ,CAAA,QAAA,GAA8B,EAAC,QAAQ,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,EAAC;YAC9E,IAAQ,CAAA,QAAA,GAAa,EAAE;IACvB,QAAA,IAAA,CAAA,QAAQ,GAAa,EAAC,QAAQ,EAAE,EAAE,EAAC;YACnC,IAAI,CAAA,IAAA,GAAoC,EAAE;YAC1C,IAAI,CAAA,IAAA,GAAa,EAAE;YACnB,IAAY,CAAA,YAAA,GAAG,KAAK;IACpB,QAAA,IAAA,CAAA,cAAc,GAAa,MAAM,KAAK;IACtC,QAAA,IAAA,CAAA,UAAU,GAAkB,IAAI,OAAO,CAAC,OAAO,IAAG;IAChD,YAAA,IAAI,CAAC,cAAc,GAAG,OAAO;IAC/B,SAAC,CAAC;YACF,IAAQ,CAAA,QAAA,GAAa,EAAE;YACvB,IAAS,CAAA,SAAA,GAAc,EAAE;YACzB,IAAc,CAAA,cAAA,GAAc,EAAE;YAC9B,IAAa,CAAA,aAAA,GAAiB,EAAE;YAChC,IAAU,CAAA,UAAA,GAAe,EAAE;YAC3B,IAAQ,CAAA,QAAA,GAAa,EAAE;YACvB,IAAW,CAAA,WAAA,GAAiC,EAAE;IAC9C,QAAA,IAAA,CAAA,IAAI,GAAa;IACf,YAAA,KAAK,EAAE,EAAE;IACT,YAAA,SAAS,EAAE,EAAE;IACb,YAAA,MAAM,EAAE,EAAE;IACV,YAAA,OAAO,EAAE;IACP,gBAAA,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;IAC5B,gBAAA,KAAK,EAAE,EAAE;IACV,aAAA;aACF;YACD,IAAM,CAAA,MAAA,GAAkB,EAAE;YAE1B,IAAM,CAAA,MAAA,GAAyD,EAAE;YACjE,IAAc,CAAA,cAAA,GAAa,EAAE;YAC7B,IAAa,CAAA,aAAA,GAAgC,EAAE;YAC/C,IAAe,CAAA,eAAA,GAAqB,EAAE;YACtC,IAAS,CAAA,SAAA,GAAa,EAAE;YACxB,IAAU,CAAA,UAAA,GAAmD,EAAE;YAC/D,IAAY,CAAA,YAAA,GAAgC,EAAE;YAC9C,IAAc,CAAA,cAAA,GAAa,EAAE;YAC7B,IAAa,CAAA,aAAA,GAA8B,EAAE;IAC7C,QAAA,IAAA,CAAA,QAAQ,GAAG,UAAmC,IAAY,EAAE,GAAW,EAAA;;oBACrE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;IAC7B,oBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG;IAC9B,oBAAA,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,cAAc,EAAE;IACrC,oBAAA,CAAC,CAAC,kBAAkB,GAAG,MAAK;IAC1B,wBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE;IACtB,4BAAA,IAAI,GAAG,KAAK,CAAC,CAAC,MAAM,EAAE;IACpB,gCAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;;qCAC7C;oCACL,MAAM,IAAI,KAAK,CAAC,+BAA+B,GAAG,CAAC,CAAC,YAAY,CAAC;;;IAGvE,qBAAC;wBACD,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC;wBACxB,CAAC,CAAC,IAAI,EAAE;;iBAEX,CAAA;aAAA;IACD,QAAA,IAAA,CAAA,YAAY,GAAG,SAAS,CAAC,KAAK;IAC9B,QAAA,IAAA,CAAA,YAAY,GAAG,SAAS,CAAC,KAAK;IAC9B,QAAA,IAAA,CAAA,WAAW,GAAG,QAAQ,CAAC,IAAI;IAC3B,QAAA,IAAA,CAAA,UAAU,GAAG,QAAQ,CAAC,GAAG;IACzB,QAAA,IAAA,CAAA,YAAY,GAAG,QAAQ,CAAC,OAAO;IAC/B,QAAA,IAAA,CAAA,YAAY,GAAG,OAAO,CAAC,IAAI;IAC3B,QAAA,IAAA,CAAA,iBAAiB,GAAG,OAAO,CAAC,SAAS;IACrC,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,SAAS;IAChC,QAAA,IAAA,CAAA,YAAY,GAAG,MAAM,CAAC,QAAQ;IAC9B,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,KAAK;YAC1B,IAAM,CAAA,MAAA,GAAG,mBAAQ;IACjB,QAAA,IAAA,CAAA,YAAY,GAAG,UAAmC,QAAgB,EAAE,IAAkB,EAAA;;IACpF,gBAAA,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS;wBAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC;IAClF,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;iBAChC,CAAA;aAAA;IACD,QAAA,IAAA,CAAA,SAAS,GAAG,SAAS,MAAM,CAAoB,CAAqC,EAAA;gBAClF,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE;IACtC,gBAAA,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAiB;;qBACjC;IACL,gBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI;oBACzC,QACE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;IAG5G,SAAC;IA1KC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE;IAC9B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE;IAC9B,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAE,EAAE,EAAC;IACxD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE;IACtB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,WAAW,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;YACnH,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;IACtG,QAAA,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ;IAAE,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjG,MAAM,IAAI,GAAG,MAAK;IAChB,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;IAC7D,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC/C,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM;IAAE,oBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;IAErF,YAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;IAC9B,gBAAA,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;wBAC3C,IAAI,IAAI,CAAC,WAAW;4BAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW;IACjE,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM;IACpC,oBAAA,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAgB,IAAI,EAAE,CAAC,CAAC;IAChF,iBAAC,CAAC;;gBAEJ,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;wBAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI;IAC/B,oBAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;wBACtB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,OAAO,IAAG;IAC7C,wBAAA,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,OAAO;IAChC,qBAAC,CAAC;IACF,oBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;IAChB,wBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO;IAC3G,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAClB,wBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;6BAC5B,IACL,CAAC,IAAI,CAAC,YAAY;IAClB,yBAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC;IAChE,wBAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;IACtB,wBAAA,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,EAC3B;IACA,wBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;;IAE5C,iBAAC,CAAC;;qBACG;oBACL,UAAU,CAAC,MAAK;IACd,oBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI;wBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;wBACpC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;qBACzC,EAAE,CAAC,CAAC;;IAET,SAAC;IACD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;IAChD,YAAA,IAAI,WAAW,KAAK,OAAO,MAAM,EAAE;oBACjC,OAAO,CAAC,OAAO;IACZ,qBAAA,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAiB,KAAI;wBACpE,MAAM,CAAC,GAAa,EAAE;wBACtB,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAS,KAAI;IACzB,wBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACX,qBAAC,CAAC;IACF,oBAAA,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,MAAK;IACf,wBAAA,IAAI,CAAC,IAAI,GAAG,EAAE;IACd,wBAAA,MAAM,EAAE,GAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAC9C,IAAI,EAAE,CAAC,YAAY;gCAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY;4BACjE,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAe,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,wBAAA,IAAI,EAAE;IACR,qBAAC,CAAC;IACJ,iBAAC;IACA,qBAAA,GAAG,EAAE;;qBACH;IACL,gBAAA,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,cAAc,EAAE;IACrC,gBAAA,CAAC,CAAC,kBAAkB,GAAG,MAAK;IAC1B,oBAAA,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE;IACtB,wBAAA,IAAI,GAAG,KAAK,CAAC,CAAC,MAAM,EAAE;IACpB,4BAAA,IAAI,CAAC,IAAI,GAAG,EAAE;gCACd,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC;gCACrC,IAAI,EAAE,CAAC,YAAY;oCAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY;gCACjE,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAe,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,4BAAA,IAAI,EAAE;;iCACD;gCACL,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,CAAC,CAAC,YAAY,CAAC;;;IAGtE,iBAAC;IACD,gBAAA,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACxD,CAAC,CAAC,IAAI,EAAE;;;iBAEL;IACL,YAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI;oBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;IACtD,YAAA,IAAI,EAAE;;;;IAmFI,WAAU,CAAA,UAAA,GAAG,UAAH;IACV,WAAM,CAAA,MAAA,GAAG,QAAY,CAAA,YAAf;sBAnLD,WAAW;;;;;;"}