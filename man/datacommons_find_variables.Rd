% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datacommons_find_variables.R
\name{datacommons_find_variables}
\alias{datacommons_find_variables}
\title{Attempt to locate variables in a set of mapped variables.}
\usage{
datacommons_find_variables(missed, map = ".", sep = "[_:]", top = 3,
  metric = "cosine")
}
\arguments{
\item{missed}{A vector of variable names or keywords to search for in the full set of mapped variables,
or the name of or path to a data commons view, from which to extract missed variables.}

\item{map}{Path to the \code{variable_map.csv} file created by \code{\link{datacommons_map_files}},
the path to a data commons project, or a variable map \code{data.frame}.}

\item{sep}{A regular expression to be treated as a term separator.}

\item{top}{Number of possible matches to return per \code{missed} entry.}

\item{metric}{Name of the similarity metric to use; see \code{\link[lingmatch]{lma_simets}}.}
}
\value{
A list with an entry for each entered variable, containing \code{top} possible matches,
which are entries from the variable map, with an added .
}
\description{
Somewhat fuzzily match entered variable names to mapped variable names, which
might be useful if variable names are specified in a view, but are changed slightly
in their source repositories.
}
\examples{
\dontrun{
# from a data commons project directory
datacommons_find_variables(c("variable_a", "variable_b"))

# try to find matches to any missed variables in a view
datacommons_find_variables("view_name")
}
}
