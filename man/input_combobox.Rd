% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input_combobox.R
\name{input_combobox}
\alias{input_combobox}
\title{Add a combobox select input to a website}
\usage{
input_combobox(label, options, default = -1, display = options,
  id = label, ..., strict = TRUE, search = TRUE, multi = FALSE,
  accordion = FALSE, clearable = FALSE, note = NULL,
  group_feature = NULL, variable = NULL, dataset = NULL,
  depends = NULL, dataview = NULL, subset = "filtered",
  selection_subset = "full_filter", filters = NULL, reset_button = FALSE,
  button_class = NULL, as.row = FALSE, floating_label = TRUE)
}
\arguments{
\item{label}{Label of the input for the user.}

\item{options}{A vector of options, the name of a variable from which to pull levels, or \code{"datasets"},
\code{"variables"}, \code{"ids"}, or \code{"palettes"} to select names of datasets, variables, entity ids, or
color palettes. If there is a map with overlay layers with properties, can also be \code{"overlay_properties"},
to select between properties.}

\item{default}{Which of the options to default to; either its index or value.}

\item{display}{A display version of the options.}

\item{id}{Unique ID of the element to be created.}

\item{...}{Additional attributes to set on the input element.}

\item{strict}{Logical; if \code{FALSE}, allows arbitrary user input, rather than limiting input to the
option set.}

\item{search}{Logical; if \code{FALSE}, does not dynamically filter the option set on user input.}

\item{multi}{Logical; if \code{TRUE}, allows multiple options to be selected.}

\item{accordion}{Logical; if \code{TRUE}, option groups will be collapsible.}

\item{clearable}{Logical; if \code{TRUE}, adds a button to clear the selection.}

\item{note}{Text to display as a tooltip for the input.}

\item{group_feature}{Name of a measure or entity feature to use as a source of option grouping,
if \code{options} is \code{"variables"} or \code{"ids"}.}

\item{variable}{The name of a variable from which to get levels (overwritten by \code{depends}).}

\item{dataset}{The name of an included dataset, where \code{variable} should be looked for; only applies when
there are multiple datasets with the same variable name.}

\item{depends}{The ID of another input on which the options depend; this will take president over \code{dataset}
and \code{variable}, depending on this type of input \code{depends} points to.}

\item{dataview}{The ID of an \code{\link{input_dataview}}, used to filter the set of options, and potentially
specify dataset if none is specified here.}

\item{subset}{Determines the subset of options shown if \code{options} is \code{"ids"}; mainly \code{"filtered"}
(default) to apply all filters, including the current selection, or \code{"full_filter"} to apply all
feature and variable filters, but not the current selection. \code{"siblings"} is a special case given a selection,
which will show other IDs with the same parent.}

\item{selection_subset}{Subset to use when a selection is made; defaults to \code{"full_filter"}.}

\item{filters}{A list with names of \code{meta} entries (from \code{variable} entry in \code{\link{data_add}}'s
\code{meta} list), and values of target values for those entries, or the IDs of value selectors.}

\item{reset_button}{If specified, adds a button after the input element that will revert the selection
to its default; either \code{TRUE}, or text for the reset button's label.}

\item{button_class}{Class name to add to the reset button.}

\item{as.row}{Logical; if \code{TRUE}, the label and input are in separate columns within a row.}

\item{floating_label}{Logical; if \code{FALSE} or \code{as.row} is \code{TRUE}, labels are separate from
their inputs.}
}
\value{
A character vector of the contents to be added.
}
\description{
Adds an input to select from the entered options,
allowing for multiple selection, dynamic filtering, and custom entries.
}
\examples{
\dontrun{
input_combobox("Options", c("a", "b"))
}
}
\seealso{
See \code{\link{input_select}} for a more standard select input, or \code{\link{input_text}}
for a free-form input.
}
