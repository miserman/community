% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init_template.R
\name{init_template}
\alias{init_template}
\title{Create new template initializer}
\usage{
init_template(name, files, dir = ".", spec_dir = ".", context = name,
  overwrite = FALSE)
}
\arguments{
\item{name}{Name of the template to be checked.}

\item{files}{List of paths to required files, relative to dir.
\code{"{name}"} included in a path string will be replaced with \code{name} during checks.
A list within the main list is treated as either alternatives files (when there is a single character vector),
or alternative strict sets of files (must contain all of at least one list;
when there are multiple character vectors).}

\item{dir}{Package directory.}

\item{spec_dir}{Parent directory of the \code{files}.}

\item{context}{name of the template's context: itself, or another templated structure.}

\item{overwrite}{logical; if \code{TRUE}, new files will replace existing ones.}
}
\value{
Creates a name.json file (in \code{dir/inst/specs} if it exists, or the current working directory),
and invisibly returns its path.
}
\description{
Create a new initializer function, and a spec file against which initialized templates can be checked.
}
\examples{
\dontrun{

# creates a version of the function spec.
init_template("function", list("R/{name}.R", "tests/testthat/text-{name}.R"))

# creates a version of the shiny function, showing alternative sets
init_template("shiny", list(
  list(
    c("ui.R", "server.R"),
    "app.R"
  ),
  "README.md"
), spec_dir = "app")
}
}
